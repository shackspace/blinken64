#
# blinken64 / Makefile
#
#  builds and flashes programs and eeprom data to blinken64
#
#
#  Copyright (C) 2011 Manuel Jerger <nom@nomnom.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#PROGRAMMER = -cstk500v2 -P/dev/ttyACM3 -B 4
PROGRAMMER = -c usbasp -P usb

PROGRAM = blinken

DEVICE	= attiny4313
F_CPU	= 4000000

# Fuses: internal oscillator 4 MHz, no clockdiv, BOD 1.8V, EEsave, spi enabled, reset _enabled_
FUSES	= -U lfuse:w:0xE4:m -U hfuse:w:0x9D:m

# Tune the lines below only if you know what you are doing:
AVRDUDE = avrdude $(PROGRAMMER) -p $(DEVICE)
OBJDUMP = avr-objdump
COMPILER_OPTS = -ffreestanding -fno-inline-small-functions -fno-move-loop-invariants
LINKER_OPTS = -Wl,--relax
COMPILE = avr-gcc -Wall -Wstrict-prototypes -Os $(COMPILER_OPTS) $(LINKER_OPTS) $(MODE) -DF_CPU=$(F_CPU) -mmcu=$(DEVICE)
OBJECTS	= $(PROGRAM).o


# yo dawg...
blinken:
	make clean all flash MODE=

master:
	make clean all flash MODE=-D_MASTER_ONLY_=1

slave:
	make clean all flash MODE=-D_SLAVE_ONLY_=1
	

# DISABLES ISP!! and enables reset pin as I/O
disable_reset_because_i_know_what_i_do:
	$(AVRDUDE) -U lfuse:w:0xE4:m -U hfuse:w:0x9C:m


all:	$(PROGRAM).hex $(PROGRAM).lss
	avr-size $(PROGRAM).hex


flash:  all
	$(AVRDUDE) -U flash:w:$(PROGRAM).hex:i

# default fuse
fuse:
	$(AVRDUDE) $(FUSES)

clean:
	rm -f $(PROGRAM).hex $(PROGRAM).elf $(PROGRAM).lss $(PROGRAM).o


$(PROGRAM).elf: font.h $(OBJECTS)
	$(COMPILE) -o $(PROGRAM).elf $(OBJECTS)

$(PROGRAM).hex: $(PROGRAM).elf
	rm -f $(PROGRAM).hex
	avr-objcopy -j .text -j .data -O ihex $(PROGRAM).elf $(PROGRAM).hex


%.lss: %.elf
	@echo
	$(OBJDUMP) -h -S $< > $@

.c.o:
	$(COMPILE) -c $< -o $@

.c.s:
	$(COMPILE) -S $< -o $@


disasm: $(PROGRAM).elf
	avr-objdump -d $(PROGRAM).elf


cpp:
	$(COMPILE) -E $(PROGRAM).c


# causes a reset
reset:
	$(AVRDUDE) -E noreset
	

# convert text.txt to eeprom.hex
textconvert: ../tools/textconv
	../tools/textconv -i text.txt -o eeprom.bin > /dev/null
	objcopy -Ibinary -Oihex eeprom.bin eeprom.hex
	avr-size eeprom.hex
	
# convert font.pgm to font.h
fontconvert: font.h

../tools/font/font.pgm: ../tools/font/font.xcf
	convert ../tools/font/font.xcf -depth 8 -compress none ../tools/font/font.pgm

font.h: ../tools/font/font.pgm ../tools/fontconv
	../tools/fontconv ../tools/font/font.pgm font.h

# overwrite eeprom w/ 0
clear_eeprom:
	$(AVRDUDE) -U eeprom:w:0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00:m

# write eeprom.hex into eeprom
eeflash:
	$(AVRDUDE) -U eeprom:w:eeprom.hex:i

# dump eeprom to stdout
read_eeprom:
	$(AVRDUDE) -U eeprom:r:/dev/stdout:i

calibrate:
	$(AVRDUDE) -O

# compile the external tools
../tools/textconv: ../tools/textconv.c
	$(MAKE) -C ../tools/ textconv

../tools/fontconv: ../tools/fontconv.c
	$(MAKE) -C ../tools/ fontconv
